#Choose your import : Local or Remote

#Local Fastfile
#import "../../../Fastlane-Template/fastlane/ios/Fastfile"

#Remote Fastfile
import_from_git(
  url: "git@github.com:Zenika/Fastlane-Template.git", # The URL of the repository to import the Fastfile from.
  branch: "main", # The branch to checkout on the repository.
  path: "fastlane/ios/Fastfile", # The path of the Fastfile in the repository.
  version: "~> 0.0.13", # The version to checkout on the repository. IMPORTANT ! You must decalre the version with "~>" prefix
  cache_path: Dir.pwd # Don't change this path
)

platform :ios do
  before_all do |lane|
    setup_project
  end

  desc "Init project variables"
  lane :setup_project do
    init_project(
      xcodeproj: ENV["XCODEPROJ"],
      target: ENV["TARGET"],
      scheme: ENV["SCHEME"],
      configuration: ENV["CONFIGURATION"],
      output_directory: ENV["OUTPUT_DIRECTORY"],
      output_name: ENV["OUTPUT_NAME"],
      signing_type: ENV["SIGNING_TYPE"]
    ) 
  end

  desc "Init Keychain and retrieve certificates and profiles"
  lane :init_keychain do
    download_certificates_and_profiles(
      git_url: ENV["GIT_URL"],
      app_identifier: ENV["APP_IDENTIFIER"], 
      type: ENV["MATCH_TYPE"], 
      team_id: ENV["TEAM_ID"], 
      username: ENV["USERNAME"]
    )
  end

  desc "Build"
  lane :build_ios do
    bump_version_number_and_build_number(version: ENV["REGEX"], build_number:ENV["BUILD_NUMBER"])
    display_badge_on_appIcon(badge: "alpha", dark:true, version:true) #badge: alpha or beta or no-badge, dark: true or false(light) 
    build
  end

  desc "Deploy"
  lane :deploy_ios do |options|
    generate_release_note(env: ENV["RELEASE_NOTE_ENV"])

    #Choose the deploy lane: deploy_firebase_app_tester or deploy_appstore
    deploy_firebase_app_tester(
      token: ENV["FIREBASE_TOKEN"],
      googleservice_info_plist_path: "./GoogleService-Info.plist"
    )
    
    # deploy_appstore(
    #   team_id: ENV["TEAM_ID"],
    #   team_name: ENV["TEAM_NAME"]
    # )

  end
end
